{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\facul2\\\\DFS\\\\tarefa-frontend\\\\src\\\\pages\\\\Tasks\\\\Form\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport api from '../../../services/api';\nimport './index.css';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = () => {\n  _s();\n\n  const history = useHistory();\n  const [model, setModel] = useState({\n    title: '',\n    description: ''\n  });\n\n  function updatedModel(e) {\n    setModel({ ...model,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const response = await api.post('/tasks', model);\n    console.log(response);\n  }\n\n  function back() {\n    history.goBack();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nova Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        size: \"sm\",\n        onClick: back,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"T\\xEDtulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"title\",\n            onChange: e => updatedModel(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            name: \"description\",\n            onChange: e => updatedModel(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasks, \"DvHEm9hH0o3hlEz/+utWF+car08=\", false, function () {\n  return [useHistory];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/USER/Documents/facul2/DFS/tarefa-frontend/src/pages/Tasks/Form/index.tsx"],"names":["React","useState","Button","Form","api","useHistory","Tasks","history","model","setModel","title","description","updatedModel","e","target","name","value","onSubmit","preventDefault","response","post","console","log","back","goBack"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport api from '../../../services/api';\r\nimport './index.css';\r\nimport { useHistory } from 'react-router-dom';\r\n \r\ninterface ITask{\r\n    title: string;\r\n    description: string;\r\n}\r\n \r\nconst Tasks: React.FC = () => {\r\n \r\n    const history = useHistory()\r\n \r\n    const [model, setModel] = useState<ITask>({\r\n        title: '',\r\n        description: ''\r\n    })\r\n \r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n        setModel({\r\n            ...model,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n \r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n        e.preventDefault()\r\n        \r\n        const response = await api.post('/tasks', model)\r\n \r\n        console.log(response)\r\n    }\r\n \r\n    function back(){\r\n        history.goBack()\r\n    }\r\n \r\n    return (\r\n        \r\n        <div className=\"container\">\r\n            <br />\r\n            <div className=\"task-header\">\r\n                <h1>Nova Tarefa</h1>\r\n                <Button variant=\"dark\" size=\"sm\" onClick={back}>Voltar</Button>\r\n            </div>\r\n            <br />\r\n            <div className=\"container\">\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Título</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                    </Form.Group>\r\n \r\n                    <Form.Group>\r\n                        <Form.Label>Descrição</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            name=\"description\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                    </Form.Group>\r\n \r\n                    <Button variant=\"dark\" type=\"submit\">\r\n                        Salvar\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Tasks;\r\n"]},"metadata":{},"sourceType":"module"}